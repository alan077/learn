#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #local0.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local0

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     50000
    user        haproxy
    group       haproxy
    daemon
    #tune.ssl.default-dh-param 2048
    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    log-format {\"client_ip\":\"%ci\",\"client_port\":\"%cp\",\"local_date_time\":\"%Tl\",\"frontend_name\":\"%f\",\"backend_name\":\"%b\",\"server_name\":\"%s\",\"tq\":\"%Tq\",\"tw\":\"%Tw\",\"tc\":\"%Tc\",\"tr:\":\"%Tr\",\"tt\":\"%Tt\",\"status_code\":\"%ST\",\"bytes_read\":\"%B\",\"bytes_uploaded\":\"%U\",\"captured_request_cookie\":\"%CC\",\"captured_response_cookie\":\"%CS\",\"termination_state\":\"%tsc\",\"actconn\":\"%ac\",\"feconn\":\"%fc\",\"beconn\":\"%bc\",\"srv_conn\":\"%sc\",\"retries\":\"%rc\",\"srv_queue\":\"%sq\",\"backend_queue\":\"%bq\",\"captured_request_headers\":\"%hr\",\"captured_response_headers\":\"%hs\",\"http_request\":\"%r\"}
    option                  httplog
    option                  dontlognull
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         60s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 30s
    timeout check           10s
    maxconn                 50000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------

frontend  WEB
    bind *:80
    #bind *:443 ssl crt  /etc/haproxy/ca.pem
    #bind *:443 ssl /usr/local/nginx/https/*.zerost1.com.pem
    mode http
    capture request header Host len 40
    capture request header X-Forwarded-For len 50
    capture request header Referer len 200
    capture request header User-Agent len 200
    capture request header Accept-Language len 200
    capture request header Cookie len 1000

    capture response header Content-Type len 30
    capture response header Content-Encoding len 10
    capture response header Cache-Control len 200
    capture response header Last-Modified len 200
    capture response header Set-Cookie len 800
    timeout http-request 50s

    stick-table type ip size 100k expire 30s  store conn_cur
    tcp-request connection track-sc0 src

#ACL
##################################################################
#营销ACL
    acl www0                req.hdr(host) lingcb.com
    acl www1                req.hdr(host) www.lingcb.com
    acl www3                req.hdr(host) www3.lingcb.com
    acl lcb                 hdr_reg(host) -i  .*lingcb.cn

#密码ACL
    acl cloudpassportapi    req.hdr(host) cloudpassportapi.lingcb.com

#WeiXin_ACL
    acl wxopenapi           req.hdr(host) wxopenapi.lingcb.com
    acl cloudcomponentapi   req.hdr(host) cloudcomponentapi.lingcb.com
    acl wxstore             req.hdr(host) wxstore.lingcb.com
    acl wxvip               req.hdr(host) wxvip.lingcb.com

#事业合伙人ACL
    acl wxcareer            req.hdr(host) wxcareer.lingcb.com

#支付ACL
    acl cloudpaymentapi     req.hdr(host) cloudpaymentapi.lingcb.com

#收银台ACL
    acl upgrade             req.hdr(host) upgrade.lingcb.com
    acl yxcashierapi        req.hdr(host) yxcashierapi.lingcb.com

#后台ACL
    acl yxsso               req.hdr(host) yxsso.lingcb.com
    acl yxstation           req.hdr(host) yxstation.lingcb.com
    acl yxstore             req.hdr(host) yxstore.lingcb.com

#资源ALC
    acl yxresource          req.hdr(host) yxresource.lingcb.com

#File_ACL
    acl yxfile              req.hdr(host) yxfile.lingcb.com
    acl yximage             req.hdr(host) yximage.lingcb.com
    acl yxtemp              req.hdr(host) yxtemp.lingcb.com
#################################################################
#ERP_ACL
#ERP_接口ACL
    acl cashier             req.hdr(host) cashier.lingcb.com
    acl toolkit             req.hdr(host) toolkit.lingcb.com
    acl wap                 req.hdr(host) wap.lingcb.com

#ERP_后台ACL    
    acl station             req.hdr(host) station.lingcb.com
    acl store               req.hdr(host) store.lingcb.com

#ERP_File_ACL
    acl erp_file                req.hdr(host) file.lingcb.com
    acl image               req.hdr(host) image.lingcb.com
    acl temp                req.hdr(host) temp.lingcb.com
#################################################################

#营销_redirect
    #redirect scheme https if !{ ssl_fc } !wxopenapi !wxcareer !wxstore !wxvip
    redirect location http://www.lingcb.com if www0

#ERP_redirect

#################################################################
#营销_use_backend
#首页
    use_backend www if www1
    use_backend www if www3
#微信
    use_backend www if wxopenapi
    use_backend www if cloudcomponentapi 
    use_backend www if wxstore
    use_backend www if wxvip
    use_backend www if wxcareer
#支付
    use_backend www if cloudpaymentapi
#密码
    use_backend www if cloudpassportapi
#后台
    use_backend www if yxsso
    use_backend www if yxstation
    use_backend www if yxstore
#收银台
    use_backend yxsyt if upgrade
    use_backend yxsyt if yxcashierapi
#File
    use_backend file if yxfile
    use_backend file if yximage
    use_backend file if yxtemp
########################################################################
#ERP_use_backend
#ERP_接口
    use_backend www if cashier
    use_backend www if toolkit
    use_backend www if wap
#ERP_后台    
    use_backend www if station
    use_backend www if store

#ERP_File_ACL
    use_backend www if erp_file 
    use_backend www if image
    use_backend www if temp
    
#Default
    default_backend www
    use_backend cn if lcb

#admin
listen ha-status
    bind *:88
    stats enable
    stats uri /admin
    stats auth admin:admin
    stats admin if TRUE
    stats refresh 30s 
#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend www
    mode http
    option httpchk GET /content/Images/logo.png  HTTP/1.1\r\nHost:yxsso.lingcb.com\r\n
    timeout check 30s
    timeout connect 60s
    timeout server 60s
    balance rdp-cookie(ASRV)
    cookie ASRV insert indirect httponly
    #balance hdr(X-Forwarded-For)
    #hash-type consistent wt6
    server s1 172.19.2.100:80 cookie 20170001 check 
    server s2 172.19.2.101:80 cookie 20170002 check
    server s3 172.19.2.102:80 cookie 20170003 check
    server s4 172.19.2.200:80 cookie 20170004 check backup
    #server s1 172.19.2.100:80 check 
    #server s2 172.19.2.101:80 check
    #server s3 172.19.2.102:80 check
    #server s4 172.19.2.200:80 check backup
backend yxsyt
    mode http
    option httpchk GET /content/Images/logo.png  HTTP/1.1\r\nHost:yxsso.lingcb.com\r\n
    timeout check 30s
    timeout connect 60s
    timeout server 60s
    balance hdr(X-Forwarded-For)
    hash-type consistent wt6
    server s1 172.19.2.100:80 check
    server s2 172.19.2.101:80 check
    server s3 172.19.2.102:80 check
    server s4 172.19.2.200:80 check backup
backend file
    mode http
    option httpchk GET /store/201701/42789869-09f3-cb85-9a4c-08d440414f6a-120x60.png  HTTP/1.1\r\nHost:yximage.lingcb.com\r\n
    timeout check 30s
    timeout connect 60s
    timeout server 60s
    balance rdp-cookie(SRV)
    cookie SRV insert indirect httponly
    server f1 172.19.1.100:80 cookie 20170101 check
    server f2 172.19.1.101:80 cookie 20170102 check
backend cn
    mode http
    option httpchk GET /content/Images/logo.png  HTTP/1.1\r\nHost:yxsso.lingcb.com\r\n
    timeout check 30s
    timeout connect 60s
    timeout server 60s
    balance rdp-cookie(CSRV)
    cookie CSRV insert indirect httponly
    #server s1 172.19.2.100:80 cookie 20170001 check
    #server s2 172.19.2.101:80 cookie 20170002 check
    #server s3 172.19.2.102:80 cookie 20170003 check
    server s4 172.19.2.200:80 cookie 20170004 check
