#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 len 65535 local0

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     50000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    #log-format {\"client_ip\":\"%ci\",\"client_port\":\"%cp\",\"local_date_time\":\"%Tl\",\"frontend_name\":\"%f\",\"backend_name\":\"%b\",\"server_name\":\"%s\",\"tq\":\"%Tq\",\"tw\":\"%Tw\",\"tc\":\"%Tc\",\"tr:\":\"%Tr\",\"tt\":\"%Tt\",\"status_code\":\"%ST\",\"bytes_read\":\"%B\",\"bytes_uploaded\":\"%U\",\"captured_request_cookie\":\"%CC\",\"captured_response_cookie\":\"%CS\",\"termination_state\":\"%tsc\",\"actconn\":\"%ac\",\"feconn\":\"%fc\",\"beconn\":\"%bc\",\"srv_conn\":\"%sc\",\"retries\":\"%rc\",\"srv_queue\":\"%sq\",\"backend_queue\":\"%bq\",\"captured_request_headers\":\"%hr\",\"captured_response_headers\":\"%hs\",\"http_request\":\"%r\"}
    log-format {"client_ip":"%ci","client_port":"%cp","local_date_time":"%Tl","frontend_name":"%f","backend_name":"%b","server_name":"%s","tq":"%Tq","tw":"%Tw","tc":"%Tc","tr:":"%Tr","tt":"%Tt","status_code":"%ST","bytes_read":"%B","bytes_uploaded":"%U","captured_request_cookie":"%CC","captured_response_cookie":"%CS","termination_state":"%tsc","actconn":"%ac","feconn":"%fc","beconn":"%bc","srv_conn":"%sc","retries":"%rc","srv_queue":"%sq","backend_queue":"%bq","captured_request_headers":"%hr","captured_response_headers":"%hs","http_request":"%r"}
    #option                  httplog
    option                  dontlognull
    option http-server-close
    option                  redispatch
    retries                 3
    timeout http-request    30s
    timeout queue           1m
    timeout connect         60s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 30s
    timeout check           30s
    maxconn                 50000
#admin
listen ha-status
    bind *:88
    stats enable
    stats uri /admin
    stats auth admin:admin
    stats admin if TRUE
    stats refresh 30s
#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend  WEB
    bind *:80
    bind *:8888
    bind *:81
    mode http
    option forwardfor       except 127.0.0.0/8
    capture request header Host len 40
    capture request header X-Forwarded-For len 50
    capture request header Referer len 200
    capture request header User-Agent len 200
    capture request header Accept-Language len 200
    capture request header Cookie len 1000

    capture response header Content-Type len 30
    capture response header Content-Encoding len 10
    capture response header Cache-Control len 200
    capture response header Last-Modified len 200
    capture response header Set-Cookie len 800

    timeout http-request 60s
##################################################################
#File_ACL
    acl yxfile              req.hdr(host) yxfile.lingcb.net
    acl yximage             req.hdr(host) yximage.lingcb.net
    acl yxtemp              req.hdr(host) yxtemp.lingcb.net
    acl file                req.hdr(host) file.lingcb.net
    acl image               req.hdr(host) image.lingcb.net
    acl temp                req.hdr(host) temp.lingcb.net
#收银台ACL
    acl upgrade             req.hdr(host) upgrade.lingcb.net
    acl yxcashierapi        req.hdr(host) yxcashierapi.lingcb.net
#ACL
    acl lcb                 hdr_reg(host) -i  .*lingcb.net
    acl zcm                 hdr_reg(host) -i  .*zhuacm.cn
#营销_redirect
    #redirect location http://www.lingcb.com if wxstore
    #redirect location http://www.lingcb.com if wxvip
    #redirect location http://www.lingcb.com if wxcareer
    #redirect location http://www.lingcb.com if yxsso
    #redirect location http://www.lingcb.com if yxstation
    #redirect location http://www.lingcb.com if yxstore
    #redirect location http://www.lingcb.com if www0
#ERP_redirect
    #redirect location http://www.lingcb.com if station
    #redirect location http://www.lingcb.com if store
    #redirect location http://www.lingcb.com if wap
#################################################################
#营销_use_backend
#收银台
    use_backend yxsyt if upgrade
    use_backend yxsyt if yxcashierapi
#File
    use_backend file if yxfile
    use_backend file if yximage
    use_backend file if yxtemp
    use_backend file if file
    use_backend file if image
    use_backend file if temp
    use_backend lcb if lcb
#ZCM
    use_backend zcm if zcm
#Default
    default_backend  app
#    stick-table type ip size 100k expire 30s  store conn_cur
#    tcp-request connection track-sc0 src
frontend  YX-SQL
    bind *:1433
    mode tcp
    option                  tcplog
    use_backend  YX-DB
frontend  YX_Redis
    bind *:6379
    mode tcp
    option                  tcplog
    use_backend  YX-Redis
#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend lcb
    mode http
    #option httpchk GET /content/Images/logo.png  HTTP/1.1\r\nHost:yxsso.lingcb.net\r\n
    option                  httplog
    timeout check 30s
    timeout connect 60s
    timeout server 60s
    balance rdp-cookie(ASRV)
    cookie ASRV insert indirect httponly
    server s1 192.168.1.24:80 cookie 20170001 check
    #server s2 172.19.2.100:80 cookie 20170002 check
    #server s2 172.19.2.101:80 cookie 20170003 check
    #server s3 172.19.2.102:80 cookie 20170004 check
backend zcm
    mode http
    #option httpchk GET /content/Images/logo.png  HTTP/1.1\r\nHost:yxsso.lingcb.net\r\n
    option                  httplog
    timeout check 30s
    timeout connect 60s
    timeout server 60s
    balance rdp-cookie(ASRV)
    cookie ASRV insert indirect httponly
    server s1 192.168.1.25:80 cookie 20170001 check
    #server s2 172.19.2.101:80 cookie 20170002 check
    #server s3 172.19.2.102:80 cookie 20170003 check
backend file
    mode http
    #option httpchk GET /store/201701/42789869-09f3-cb85-9a4c-08d440414f6a-120x60.png  HTTP/1.1\r\nHost:yximage.lingcb.net\r\n
    option                  httplog
    timeout check 30s
    timeout connect 60s
    timeout server 60s
    balance rdp-cookie(SRV)
    cookie SRV insert indirect httponly
    server f1 192.168.1.24:80 cookie 20170101 check
    #server f2 172.19.1.101:80 cookie 20170102 check
backend yxsyt
    mode http
    #option httpchk GET /content/Images/logo.png  HTTP/1.1\r\nHost:yxsso.lingcb.net\r\n
    option                  httplog
    timeout check 30s
    timeout connect 60s
    timeout server 60s
    balance hdr(X-Forwarded-For)
    hash-type consistent wt6
    server s1 192.168.1.24:80 check
    #server s2 172.19.2.101:80 check
    #server s3 172.19.2.102:80 check
backend app
    option                  tcplog
    balance     roundrobin
    server  app1 192.168.1.24:80 check
backend YX-DB
    mode tcp
    stick store-request src
    stick-table type ip size 200k expire 60m 
    option                  tcplog
    balance     roundrobin
    server  app1 192.168.1.30:1433 check
backend YX-Redis
    mode tcp
    stick store-request src
    stick-table type ip size 200k expire 60m
    option                  tcplog
    balance     roundrobin
    server  app1 192.168.1.250:6379 check

