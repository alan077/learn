Redis基础命令
redis-server Redis服务器
redis-cli Redis命令行客户端
redis-benchmark Redis性能测试工具
redis-check-aof AOF文件修复工具
redis-check-dump RDB文件检查工具


启动redis
使用redis-server或者redis-server --port 6380
Redis源代码目录的utils文件夹中有个名为redis_init_script的初始化脚本文件，可以开机自启动

相关参数：
deamonize yes 使Redis以守护进程模式运行
pidfile /var/run/redis_端口号.pid 设置Redis的PID文件位置
port 端口号 设置Redis监听的端口号
dir /var/redis/端口号 设置持久化文件存放位置

将初始化文件加入/etc/inin.d/redis
设置开机自启动 updta-rc.d redis defaults

关闭redis
redis-cli SHUTDOWN

kill Redis进程的PID 也可以正常结束Redis，效果和发生shutdowm命令一样

发送命令
第一种方式是将命令作为redis-cli才安上执行 redis-cli shutdown
redis-cli执行时会自动按照默认配置(服务器地址为127.0.0.1，端口号为6379)连接Redis
也可以通过-h和-p参数自定义地址和端口
redis-cli -h 127.0.0.1 -p 6379
rrdis-cli ping 测试客户端与Redis的连接是否正常，如果正常会接收回复PONG
第二种方式不带测试运行redis-cli，这样会进入交互模式


1、key?pattern????????????#获取符合规则的键名列表，可以使用通配符
2、exists?key????????????#判断一个键是否存在
3、del????key????????????????#删除键
del?命令不支持通配符，但是可以结合linux的管道和xargs命令自己实习删除所有符合规则的键
比如要删除所有以"user:"开头的键，就可以执行?redis-cli?keys?“user:*”?|xargs?redis-cli?del
另外由于del命令支持多个键作为参数，所有还可以执行redis-cli?DEL?`redis-cli?keys?“user:*”`来到达通用的效果，但是性能更好
4、type?key????????????????#获取键值的数据类型
返回值可能是string(字符串类型)、hash(散列类型)、list(列表类型)、set(集合类型)、zset(有序集合类型)


1、赋值与取值
set和get是Redis中最简单的两个命令，它们实现的功能和编程语言中的读取变量相似
2、incr?key?递增数字




默认我们进入redis是使用0号字典数据库，我们可以使用select 命令来更好字典数据库，
Redis默认支持16个字典数据库
Redis不支持自定义数据库名，不能做详细的访问控制
flushall    清空所有数据库中的数据
flushdb     清空当前数据库中的数据

字符串数据类型
set key value 设置key 和value
get key 获取指定value
keys pattern pattern支持glob风格通配符格式，获取匹配到的的key
exists key 判断一个键是否存在
del key 删除键
config set 可以动态修改部分redis配置
type key 获取键值的数据类型
incr key 当存储的字符串是整数形式时，Redis提供一个使用incr，让当前键值递增
incrby key increment 通过increment参数指定一次增加的数值
decr key 依次递减
decrby key decrement 减少指定的参数
incrbyfloat key increment 增加指定浮点数
append key value 向尾部追加值
mget key [key...] 同时获得多个键值
mset key vlaue [key value..]设置多个键值

散列数据类型
hset、hget 赋值与取值
hset key filed1 value1
hset key filed2 value2
hset命令的方便之处在于不区分插入和更新操作，这意味着修改数据时不用事先判断字段是否存在来决定要执行的是插入操作还是更新操作
hmget key filed1 filed2
hgetall key 获取键中所有字段和字段值
hexists key field 判断字段是否存在
hsetnx key field value1 当字段不存在时赋值
hincrby key field increment 增加数字
hdel key field 删除字段
hkeys key 获取字段名
hvals key 获取字段值
hlen key 获取字段数量

列表数据类型
lpush key value [value] 向列表左边增加一个元素，如果键不存在则创建
rpush key value [value] 向列表右边增加一个元素，如果键不存在则创建
lpop key 从列表左侧弹出一个元素
rpop key 从列表右侧弹出一个元素
llen key 获取列表中元素的个数
lrange key start stop 获得列表分片
lrem key count value 删除列表中指定的值
lindex key index 获取指定索引的元素值
lset key index value 设置指定索引的元素值
ltrim key start end 只保留列表指定片段
linsert key brdore|after pivot value 向列表中插入元素
rpoplpush source destination将元素从一个列表转到另外一个列表


集合数据类型
sadd key member [member] 增加元素
srem key member [member] 删除元素
smembers key 获取集合中的所有元素
sismembers key 判断元素是否在集合中
sdiff key [key] 用来对比多个集合执行差集合间运算
sinter key [key] 用来对多个集合执行交集运算
sunion key [key] 用来对多个集合执行并集运算
scard key 获取集合中元素个数


有序集合数据类型
zadd key score member [score member] 增加元素
zscore key member 获得元素的分数
zrange key start stop [withscores] 获得排名在某个范围的元素列表
zrevrange key start stop [withscores]
zrangebyscore key min max [withscores] [limit offset count] 获得指定分数范围的元素
zincrby key increment member 增加某个元素的分数
zcard key 获得集合中元素的数量
zcount key min max 获得指定分数范围内的元素个数
zrem key member [member] 删除一个或多个元素
zremrangerbyrank key start stop 按照排名范围删除元素
zremrangebyscore key min max 按照分数范围删除元素
zrank key member 获得元素的排名
zrevrank key member

持久化数据目录/var/lib/redis/

python操作redis
import redis
r = redis.Redis(host='192.168.100.50',port=6379,db=0)
