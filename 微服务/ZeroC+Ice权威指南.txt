分布式计算三要素
    存储器、运算器、控制器、网络
由于采用网络将多个机器互联并依赖网络完成节点间的数据通信，在增强了系统的吞吐量和并发性的同时，也大大降低了分布式系统的可靠性，并且分布式设计本身也导致整个系统的复杂性大大增加，加之需要额外考虑系统中的节点失效问题，因而一个可靠的分布式系统往往比一个可靠的单机系统要复杂N倍
目前主流的远程通信机制
    远程过程调用(RPC通信)
        历史最悠久同时应用最为普遍的一种技术，其实实现过程较为复杂，但用起来相对直观和简单，因为跟我们调用本地方法的写法几乎没什么差别
    消息队列
        通过消息队列实现远程通信，系统耦合性降低，并且是异步通信，加之消息中间件比较成熟和标准化，因此开发难度降低，整体架构简单
    远程共享数据
        用数据库或远程共享文件来实现分布式组件通信，即各个节点把数据写入某个表或文件中，然后其他节点定时读取数据来实现数据通信。这种基于数据库或文件通信方式效率比较低，已经慢慢地被基于Zookeeper的共享目录树的实时通信方式所取代
ZeroC Ice，就是RPC通信领域里最稳定、强大、高性能、跨平台、多语言支持的老牌中间件，特别适合于当前互联网领域中一个平台存在多种开发语言编程，以及网站和App应用并存的复杂大型项目
RPC（远程过程调用协议）
    一种通过网络从远程计算机程序上请求服务，而不需要了解底层网络技术的协议。RPC假定某些传输协议的存在，如TCP或UDP，为通信程序之间携带信息数据；在OSI网络通信模型中，RPC跨越了传输层和应用层
  优点：
    1、使用者不需要了解复杂的底层网络通信技术，不用关心数据是怎样被封包并传送到对方的，方法调用的结果又是如何被传回到本机的等诸如此类的很复杂的技术细节
    2、RPC使得开发网络分布式系统更加容易
  RPC的实现
    RPC采用客户机/服务器模式。请求程序就是一个客户机，而服务提供程序就是一个服务器
    首先进程发生一个有进程参数的调用信息到服务进程，然后等待应答信息。在服务器端，进程保持睡眠状态直到调用信息到达为止。当一个调用信息到达时，服务器获得进程参数，计算结果，发生答复信息，然后等待下一个调用信息。最后，客户端调用过程接收答复信息，获得进程结果，然后调用继续进行