1、数据层放弃SQL Server数据库和存储过程，全部迁移到Linux平台上的MySQL数据库上；
2、缓存不再依赖.net自身提供的缓存机制，迁移到部署在Linux平台上的分布式的Redis上；
3、服务之间的调用，避免使用.net自身专有协议，改成Restful的HTTP Web API调用；
4、静态资源请求，不再让IIS自己处理，分离到Linux平台上的nginx去处理；
5、需要读取的文件系统，也改成访问Linux平台上的分布式文件系统；
6、部署.net代码的Windows服务器放在LVS后面，用LVS做负载均衡和故障切换；



.NET 需要处理的高性能WEB架构 - .NET架构

1.如果不想被微软包围(其实微软的一套并不贵，是被谣言传高了)，数据层依然可以选择SQL Server数据库和存储过程。
2.缓存不再依赖.net自身提供的缓存机制，迁移到部署在Linux平台上的分布式的Redis，或者Memcache或者最新的couchbase进行缓存。
3.服务之间的调用，可以改成Restful的HTTP Web API（比如最新asp.net mvc webapi）调用或者使用WCF的TCP通讯方式，最好的方式专门部署提供服务的服务器。
4.静态资源请求，不再让IIS自己处理，分离到Linux平台上的nginx去处理。做到静态资源请求和动态内容分离。
5.需要读取的文件系统，也改成访问Linux平台上的分布式文件系统。
6.部署.net代码的Windows服务器放在LVS后面，用LVS做负载均衡和故障切换，nginx也是不错的选择哟（推荐）。 
7.另外可以弄个CDN加速，增加访问速度