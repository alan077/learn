持久化：通过持久化功能，Redis保证了即使在服务器重启的情况下也不会损失（或少量损失）数据。
复制：同步后的数据库分为两类，一类是主数据库，一类是从数据库。主数据库可以进行读写操作，当发生写操作时自动将数据同步给从数据库。而从数据库一般是只读的，并接受主数据库同步过来的数据。一个主数据库可以拥有多个从数据库，而一个从数据库只能拥有一个主数据库
在Redis中使用复制功能非常容易，只需要在从数据库的配置文件中加入“slaveof 主数据库IP主数据库端口”即可，主数据库无需进行任何配置
可以通过设置从数据库的配置文件中的slave-read-only为no以使从数据库可写，但是对从数据库的任何更改都不会同步给任何其他数据库，并且一旦主数据库中更新了多应用的数据库就好覆盖从数据库中的改动
配置多台从数据库的方法也一样，在所有的从数据库的配置文件中都加上slaveof参数指向同一个数据库即可

原理
    当一个从数据库启动后，会向主数据库发生SYNC命令，主数据库接到SYNC命令后会开始在后台保存快照（即RDB持久化的过程），并将保存期间接收到的命令缓存起来。当快照完成后，Redis会将快照文件和所有缓存的命令发送给从数据库。从数据库收到后，会载入快照文件并执行收到的缓存的命令。当主从数据库断开重连后会重新执行上述操作，不支持断点续传
从数据库不仅可以接收主数据库的同步数据，自己也可以同时作为主数据库存在，形成类似图的结构
读写分离：
    通过复制可以实现读写分离以提高服务器的负载能力。在常见的场景中，读的频率大于写，当单机的Redis无法应付大量的读请求时(尤其是较耗资源的请求，比如SORT命令等)可以通过复制功能建立多个从数据库，主数据库只能进行写操作，而从数据库负责读操作
从数据库持久化
    另一个相对耗时的操作是持久化，为了提高性能，可以通过复制功能建立一个（或若干个）从数据库，并在从数据库中启用持久化，同时在主数据库禁用持久化。当从数据库崩溃时重启后主数据库会自动将数据同步过来，所以无需担心数据丢失。
    而当主数据库崩溃时，需要在从数据库中使用SLAVEOF ON ONE命令将从数据库提升成为主数据库继续服务，并在原来的主数据库启动后使用SLAVEOF命令将其设置成新的数据库的从数据库，即可将数据库同步回来
数据库密码：
    通过配置文件中requirepass参数设置redis密码
    配置redis复制的时候如果主数据库设置了密码，需要在从数据库的配置文件中通过masterauth参数设置主数据库的密码，以使从数据库连接主数据库时自动使用AUTH命令进行认证
命令重命名：
    rename-command FLUSHALL “”
耗时命令日志：
    当一条命令执行时间超过限制时，Redis会将命令的执行时间等信息加入耗时命令日志(slow log)以供开发者查看。可以通过配置文件的slowlog-log-slower-than参数设置这一限制，要注意单位是微秒（1000000微秒相当于1S），默认值是10000。耗时命令日志存储在内存中，可以通过配置文件的slowlog-max-len参数来限制记录的条数
    使用SLOWLOG GET命令来获取当前的耗时命令日志
    日志格式：
        1、该日志唯一ID
        2、该命令执行的UNIX时间
        3、该命令的耗时时间，单位是微秒
        4、命令及其参数